{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/utility.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","registerServiceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","BuildControl","Label","Less","More","Input","InputElement","Invalid","Toolbar","DesktopOnly","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavigationItems","DrawerToggle","Backdrop","Burger","Modal","Loader","load2","CheckoutSummary","ContactData","Order","Auth","aux","props","children","logo","react_default","a","createElement","className","classes","style","height","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","exact","activeClassName","navigationItems","isAuthenticated","drawerToggle","onClick","clicked","toolbar","drawerToggleClicked","isAuth","backdrop","show","sideDrawer","attachedClasses","open","Auxiliary","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","this","Component","connect","auth","token","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","nextProps","nextState","modalClosed","transform","opacity","button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","axios","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","objectSpread","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","Burger_OrderSummary_OrderSummary","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","orderForm","name","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","defineProperty","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","react_router","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","hoc_Layout_Layout","withRouter","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","undefined","action","updatedIngredient","updatedState","addIngredient","updatedIng","updatedSt","removeIngredient","setIngredients","fetchIngredientsFailed","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.40c23e2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2fGkq\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Znoj\",\"Seeds1\":\"BurgerIngredient_Seeds1__30Pse\",\"Seeds2\":\"BurgerIngredient_Seeds2__1hKVz\",\"Meat\":\"BurgerIngredient_Meat__23GHS\",\"Cheese\":\"BurgerIngredient_Cheese__IjqPN\",\"Salad\":\"BurgerIngredient_Salad__koUIH\",\"Bacon\":\"BurgerIngredient_Bacon__1BKyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3dBKX\",\"Open\":\"SideDrawer_Open__Grr3m\",\"Close\":\"SideDrawer_Close__rcNni\",\"Logo\":\"SideDrawer_Logo__3pV5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2c3cb\",\"Label\":\"BuildControl_Label__13JXi\",\"Less\":\"BuildControl_Less__3tmMY\",\"More\":\"BuildControl_More__3nGDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3PCZF\",\"Label\":\"Input_Label__jfAwZ\",\"InputElement\":\"Input_InputElement__39fYa\",\"Invalid\":\"Input_Invalid__ETzN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2uPo-\",\"Logo\":\"Toolbar_Logo__12MYJ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2LHHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3vOXM\",\"active\":\"NavigationItem_active__3EAos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1wDhU\",\"OrderButton\":\"BuildControls_OrderButton__3L2JH\",\"enable\":\"BuildControls_enable__2m3n0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2PS5M\",\"Success\":\"Button_Success__2Mnqx\",\"Danger\":\"Button_Danger__2GTDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2ev8Q\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__15J6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__33EiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2WNF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__jZIA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3UTuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__35pKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1-95r\",\"load2\":\"Spinner_load2__oDRYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3iPvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2AmNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3SODI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1XBU8\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = ( props ) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = ( props ) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\n        {!props.isAuthenticated\n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Auxiliary>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Auxiliary>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Auxiliary from '../Auxiliary/Auxiliary';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Auxiliary>\n                <Toolbar\n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Auxiliary>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect( mapStateToProps )( Layout );","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ( 'bread-bottom' ):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ( 'bread-top' ):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ( 'meat' ):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ( 'cheese' ):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ( 'bacon' ):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            case ( 'salad' ):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = ( props ) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed( 2 )}</strong></p>\n        {controls.map( ctrl => (\n            <BuildControl\n                key={ctrl.label}\n                label={ctrl.label}\n                added={() => props.ingredientAdded( ctrl.type )}\n                removed={() => props.ingredientRemoved( ctrl.type )}\n                disabled={props.disabled[ctrl.type]} />\n        ) )}\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\n\nimport classes from './Modal.module.css';\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render () {\n        return (\n            <Auxiliary>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Auxiliary>\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n\n    render () {\n        const ingredientSummary = Object.keys( this.props.ingredients )\n            .map( igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li> );\n            } );\n\n        return (\n            <Auxiliary>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Auxiliary>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Auxiliary from '../Auxiliary/Auxiliary';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req => {\n                this.setState( { error: null } );\n                return req;\n            } );\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\n                this.setState( { error: error } );\n            } );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject( this.reqInterceptor );\n            axios.interceptors.response.eject( this.resInterceptor );\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState( { error: null } );\n        }\n\n        render () {\n            return (\n                <Auxiliary>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Auxiliary>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-3493a.firebaseio.com/'\n});\n\nexport default instance;","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAh3vEcCyLbJbthK7F-bopm3QViUaViNpE';\n        if (!isSignup) {\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAh3vEcCyLbJbthK7F-bopm3QViUaViNpE';\n        }\n        axios.post(url, authData)\n            .then(response => {\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.localId);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }   \n        }\n    };\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nexport class BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount () {\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState( { purchasing: true } );\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <Auxiliary>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                        price={this.props.price} />\n                </Auxiliary>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        // {salad: true, meat: false, ...}\n        return (\n            <Auxiliary>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Auxiliary>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = ( name ) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = ( name ) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = ( ingredients ) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get( 'https://react-my-burger-3493a.firebaseio.com/ingredients.json' )\n            .then( response => {\n               dispatch(setIngredients(response.data));\n            } )\n            .catch( error => {\n                dispatch(fetchIngredientsFailed());\n            } );\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = ( orderData, token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() );\n        axios.post( '/orders.json?auth=' + token, orderData )\n            .then( response => {\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\n            } )\n            .catch( error => {\n                dispatch( purchaseBurgerFail( error ) );\n            } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get( '/orders.json' + queryParams)\n            .then( res => {\n                const fetchedOrders = [];\n                for ( let key in res.data ) {\n                    fetchedOrders.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            } )\n            .catch( err => {\n                dispatch(fetchOrdersFail(err));\n            } );\n    };\n};","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = ( value, rules ) => {\n    let isValid = true;\n    if ( !rules ) {\n        return true;\n    }\n\n    if ( rules.required ) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if ( rules.minLength ) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if ( rules.maxLength ) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if ( rules.isEmail ) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test( value ) && isValid\n    }\n\n    if ( rules.isNumeric ) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test( value ) && isValid\n    }\n\n    return isValid;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../../store/actions/index';\nimport {updateObject, checkValidity} from '../../../shared/utility';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n  \n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        }\n\n        this.props.onOrderBurger(order, this.props.token);\n        \n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        \n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidity(event.target.value, this.state.validation),\n            touched: true\n        });\n\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        });\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace( '/checkout/contact-data' );\n    }\n\n    render () {\n        let summary = <Redirect to=\"/\" />\n        if ( this.props.ings ) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nexport default connect( mapStateToProps )( Checkout );","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount () {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render () {\n        let orders = <Spinner />;\n        if ( !this.props.loading ) {\n            orders = this.props.orders.map( order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ) )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\nimport {updateObject, checkValidity} from '../../shared/utility';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    }\n\n    componentDidMount() {\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\n            this.props.onSetAuthRedirectPath();\n        }\n    }\n\n    \n\n    inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject(this.state.controls, {\n            [controlName]: updateObject(this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity( event.target.value, this.state.controls[controlName].validation ),\n                touched: true\n            })\n\n        });\n        this.setState( { controls: updatedControls } );\n    }\n\n    submitHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return {isSignup: !prevState.isSignup};\n        });\n    }\n\n    render () {\n        const formElementsArray = [];\n        for ( let key in this.state.controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: this.state.controls[key]\n            } );\n        }\n\n        let form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\n        ) );\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\n        }\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                <Button \n                    clicked={this.switchAuthModeHandler}\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: ( email, password, isSignup ) => dispatch( actions.auth( email, password, isSignup ) ),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( Auth );","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n    render () {\n        return <Redirect to=\"/\"/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n\n  render () {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if ( this.props.isAuthenticated ) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseBurgerStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst purchaseBurgerSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseBurgerFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst authStart = ( state, action ) => {\n    return updateObject( state, { error: null, loading: true } );\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject( state, { \n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n     } );\n};\n\nconst authFail = (state, action) => {\n    return updateObject( state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}